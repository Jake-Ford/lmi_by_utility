geometry=TRUE) %>%
mutate(MedInc = estimate) %>%
select(geoid=GEOID, geometry)
chas_df <- load_chas() %>%
mutate(State_Name = case_when(
state == 17 ~ "Illinois",
state == 25 ~ "Massachusetts",
state == 27 ~ "Minnesota",
state == 34 ~ "New Jersey",
state == 35 ~ "New Mexico",
state == 36 ~ "New York",
TRUE ~ "Other"
))
total_100_by_state <- chas_df %>%
group_by(State_Name) %>%
summarize(`Pop under 100 AMI` = comma(sum(AMI_100)))
datatable(total_100_by_state)
add_geo <- merge(chas_df, get_tracts)
add_geo <- st_as_sf(add_geo)
hifld_df <- st_transform(hifld_df, st_crs(add_geo)) %>%
st_make_valid()
temp <- add_geo %>%
st_point_on_surface() %>%
st_make_valid() %>%
st_join(hifld_df %>% select(NAME, STATE)) %>%
st_drop_geometry() %>%
group_by(NAME, State_Name) %>%
summarize(`Pop under 100 AMI` = comma(sum(AMI_100)))
datatable(temp)
nj_utility_zone <- st_read("utility_zones/NJ/Electric_Utilities_Territory_Map_of_New_Jersey.shp")
nj_utility_zone <- st_as_sf(nj_utility_zone)
nj_utility_zone <- st_transform(nj_utility_zone, st_crs(get_tracts)) %>%
st_make_valid()
nj_utility_zone <- st_transform(nj_utility_zone, st_crs(add_geo)) %>%
st_make_valid()
library(dplyr)
library(DT)
temp <- add_geo %>%
st_point_on_surface() %>%
st_make_valid() %>%
st_join(nj_utility_zone %>% select(NAME)) %>%
st_drop_geometry() %>%
group_by(NAME) %>%
filter(!is.na(NAME)) %>%
summarize(`Pop under 100 AMI` = (sum(AMI_100)))  %>%
arrange(desc(`Pop under 100 AMI`)) %>%
adorn_totals("row")
datatable(temp, caption = "New Jersey")%>%
formatCurrency('Pop under 100 AMI',currency = "", interval = 3, mark = ",")
leaflet()
addProviderTiles("CartoDB.Positron") %>%
addPolygons( data = nj_utility_zone)
leaflet()
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone)
st_crs(nj_utility_zone)
st_crs(get_tracts)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone)
View(nj_utility_zone)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
color = "black",
dashArray = "3")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
color = "black",
fillOpacity = 0.7,
dashArray = "3")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
color = "black",
fillOpacity = 0.7,
opacity = 1,
weight = 2,
dashArray = "3")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
pal <- colorFactor("virdis", nj_utility_zone$NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(NAME),
color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
pal <- colorFactor("virdis", nj_utility_zone$NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
pal <- colorFactor("virdis", nj_utility_zone$NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
pal <- colorFactor(topo.colors(5), nj_utility_zone$NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
pal <- colorFactor(topo.colors(5), nj_utility_zone$NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
# Load required libraries
library(leaflet)
library(RColorBrewer)
# Convert NAME to a factor (if it's not already)
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
# Create popups using lapply to display Utility Name for each polygon
popups <- lapply(nj_utility_zone$NAME, function(name) {
paste("Utility Name: ", name)
})
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
fillOpacity = 0.5, # Adjust the opacity as you like
color = "black",
weight = 2,
dashArray = "3",
popup = popups) %>%
addLegend(pal = pal,
values = ~nj_utility_zone$NAME,
title = "Utility Zone Name",
opacity = 1)
table(nj_utility_zone$NAME)
sum(is.na(nj_utility_zone$NAME)
)
# Load required libraries
library(leaflet)
library(RColorBrewer)
nj_utility_zone <- nj_utility_zone %>%
filter(!is.na(NAME))
# Convert NAME to a factor (if it's not already)
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
# Create popups using lapply to display Utility Name for each polygon
popups <- lapply(nj_utility_zone$NAME, function(name) {
paste("Utility Name: ", name)
})
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
fillOpacity = 0.5, # Adjust the opacity as you like
color = "black",
weight = 2,
dashArray = "3",
popup = popups) %>%
addLegend(pal = pal,
values = ~nj_utility_zone$NAME,
title = "Utility Zone Name",
opacity = 1)
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
pal <- colorFactor(topo.colors(5), nj_utility_zone$NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
?brewer.pal
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Dark2") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Dark2") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
# fillOpacity = 0.1,
opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Dark2") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
# fillOpacity = 0.1,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Dark2") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 1,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 1,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.75,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME))
nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.75,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME)) %>%
addLegend("bottomright",
pal=pal,
values = nj_utility_zone$NAME)
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = case_when(
grepl("Municipal", NAME) ~ "Municipal",
TRUE ~ NAME
))
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = case_when(
grepl("Municipal", NAME) ~ "Municipal",
TRUE ~ NAME )
))
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = case_when(
grepl("Municipal", NAME) ~ "Municipal",
TRUE ~ NAME )
)
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = case_when(
grepl("Municipal", NAME) ~ "Municipal",
FALSE ~ NAME )
)
grepl("Muni", nj_utility_zone$NAME)
nj_utility_zone <- nj_utility_zone %>%   # Assigning the result back to nj_utility_zone
mutate(
name_2 = case_when(                 # Creating a new column name_2
grepl("Municipal", NAME) ~ "Municipal",   # If "Municipal" is found in NAME, set name_2 to "Municipal"
TRUE ~ NAME                       # If not, set name_2 to the original value from NAME
)
)
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = ifelse(grepl("Municipal", NAME), "Municipal", NAME))
table(nj_utility_zone$name_2)
nj_utility_zone <- st_read("utility_zones/NJ/Electric_Utilities_Territory_Map_of_New_Jersey.shp")
nj_utility_zone <- st_as_sf(nj_utility_zone)
nj_utility_zone <- st_transform(nj_utility_zone, st_crs(get_tracts)) %>%
st_make_valid()
nj_utility_zone <- st_transform(nj_utility_zone, st_crs(add_geo)) %>%
st_make_valid()
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = ifelse(grepl("Municipal", NAME), "Municipal", nj_utility_zone$NAME))
table(nj_utility_zone$name_2)
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = ifelse(grepl("Municipal", NAME), "Municipal", nj_utility_zone$NAME))
#nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$NAME))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$NAME))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$NAME),
#  color = "black",
fillOpacity = 0.75,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$NAME)) %>%
addLegend("bottomright",
pal=pal,
values = nj_utility_zone$NAME)
nj_utility_zone <- nj_utility_zone %>%
mutate(name_2 = ifelse(grepl("Municipal", NAME), "Municipal", nj_utility_zone$NAME))
#nj_utility_zone$NAME <- as.factor(nj_utility_zone$NAME)
# Choose a color palette for the categorical variable
num_categories <- length(levels(nj_utility_zone$name_2))
color_palette <- brewer.pal(num_categories, "Set3") # You can choose any palette you prefer
# Create a named color palette for leaflet to use in legend
pal <- colorFactor(color_palette, levels(nj_utility_zone$name_2))
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = nj_utility_zone,
fillColor = ~pal(nj_utility_zone$name_2),
#  color = "black",
fillOpacity = 0.75,
#  opacity = 1,
weight = 2,
dashArray = "3",
popup=paste("Utility Name: ", nj_utility_zone$name_2)) %>%
addLegend("bottomright",
pal=pal,
values = nj_utility_zone$name_2)
#Load packages we'll need throughout the entire document
library(readxl)
library(sf)
library(dplyr)
library(scales)
library(tidycensus)
library(tidyverse)
options(tigris_use_cache = TRUE)
library(nngeo)
library(leaflet)
library(janitor)
library(DT)
library(kableExtra)
library(ggmap)
source('helper_functions.R')
options(scipen = 100)
state_list <- c("IL", "NM", "MA", "NY", "NJ", "MN")
hifld_df <- st_read("utility_zones/HIFLD/Electric_Retail_Service_Territories (1)/Electric_Retail_Service_Territories.shp") %>%
filter(STATE %in% state_list)
get_tracts <- get_acs(
geography="tract",
state=state_list,
variables=c("Median Income" = "S1901_C01_012E"),
year=2017,
geometry=TRUE) %>%
mutate(MedInc = estimate) %>%
select(geoid=GEOID, geometry)
chas_df <- load_chas() %>%
mutate(State_Name = case_when(
state == 17 ~ "Illinois",
state == 25 ~ "Massachusetts",
state == 27 ~ "Minnesota",
state == 34 ~ "New Jersey",
state == 35 ~ "New Mexico",
state == 36 ~ "New York",
TRUE ~ "Other"
))
#Load packages we'll need throughout the entire document
library(readxl)
library(sf)
library(dplyr)
library(scales)
library(tidycensus)
library(tidyverse)
options(tigris_use_cache = TRUE)
library(nngeo)
library(leaflet)
library(janitor)
library(DT)
library(kableExtra)
library(ggmap)
source('helper_functions.R')
options(scipen = 100)
state_list <- c("IL", "NM", "MA", "NY", "NJ", "MN")
hifld_df <- st_read("utility_zones/HIFLD/Electric_Retail_Service_Territories (1)/Electric_Retail_Service_Territories.shp") %>%
filter(STATE %in% state_list)
get_tracts <- get_acs(
geography="tract",
state=state_list,
variables=c("Median Income" = "S1901_C01_012E"),
year=2017,
geometry=TRUE) %>%
mutate(MedInc = estimate) %>%
select(geoid=GEOID, geometry)
chas_df <- load_chas() %>%
mutate(State_Name = case_when(
state == 17 ~ "Illinois",
state == 25 ~ "Massachusetts",
state == 27 ~ "Minnesota",
state == 34 ~ "New Jersey",
state == 35 ~ "New Mexico",
state == 36 ~ "New York",
TRUE ~ "Other"
))
